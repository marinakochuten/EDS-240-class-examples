coord_fixed() +
scale_fill_viridis_c(labels = label_currency(scale = 0.001, suffix = "k")) +
scale_y_discrete(labels = label_wrap(30)) +
guides(fill = guide_colorbar(barwidth = 15,
barheight = 0.75,
title.position = "top")) +
theme_minimal() +
theme(
legend.position = "top"
)
#| eval: true
#| echo: true
# create heatmap ----
ggplot(analysts, aes(x = year, y = occupation, fill = total_earnings)) +
geom_tile() +
labs(fill = "Total Earnings") +
# Force x axis and y axis to have the same ratio
coord_fixed() +
scale_fill_viridis_c(labels = label_currency(scale = 0.001, suffix = "k")) +
scale_y_discrete(labels = label_wrap(30)) +
guides(fill = guide_colorbar(barwidth = 15,
barheight = 0.75,
title.position = "top")) +
theme_minimal() +
theme(
legend.position = "top",
axis.title = element_blank()
)
# determine order of occupations based on highest total_earnings in 2016 ----
order_2016 <- analysts |>
filter(year == 2016) |>
arrange(total_earnings) |>
mutate(order = row_number()) |>
select(occupation, order)
# join order with rest of data to set factor levels ----
heatmap_order <- analysts |>
left_join(order_2016, by = "occupation") |>
mutate(occupation = fct_reorder(occupation, order))
#| eval: true
#| echo: true
# create heatmap ----
ggplot(analysts, aes(x = year, y = occupation, fill = total_earnings)) +
geom_tile() +
labs(fill = "Total Earnings") +
# Force x axis and y axis to have the same ratio
coord_fixed() +
scale_fill_viridis_c(labels = label_currency(scale = 0.001, suffix = "k")) +
scale_y_discrete(labels = label_wrap(30)) +
guides(fill = guide_colorbar(barwidth = 15,
barheight = 0.75,
title.position = "top")) +
theme_minimal() +
theme(
legend.position = "top",
axis.title = element_blank()
)
#| eval: true
#| echo: true
# create heatmap ----
ggplot(heatmap_order, aes(x = year, y = occupation, fill = total_earnings)) +
geom_tile() +
labs(fill = "Total Earnings") +
# Force x axis and y axis to have the same ratio
coord_fixed() +
scale_fill_viridis_c(labels = label_currency(scale = 0.001, suffix = "k")) +
scale_y_discrete(labels = label_wrap(30)) +
guides(fill = guide_colorbar(barwidth = 15,
barheight = 0.75,
title.position = "top")) +
theme_minimal() +
theme(
legend.position = "top",
axis.title = element_blank()
)
#| eval: true
#| echo: true
#....guarantee the same random samples each time we run code.....
set.seed(0)
#.........get 10 random jobs that are 75%+ female (2016).........
f75 <- jobs_clean |>
filter(year == 2016, group_label == "Occupations that are 75%+ female") |>
slice_sample(n = 10)
#..........get 10 random jobs that are 75%+ male (2016)..........
m75 <- jobs_clean |>
filter(year == 2016, group_label == "Occupations that are 75%+ male") |>
slice_sample(n = 10)
#........get 10 random jobs that are 45-55%+ female (2016).......
f50 <- jobs_clean |>
filter(year == 2016, group_label == "Occupations that are 45-55% female") |>
slice_sample(n = 10)
#.......combine dfs & relevel factors (for plotting order).......
subset_jobs <- rbind(f75, m75, f50) |>
mutate(group_label = fct_relevel(group_label,
"Occupations that are 75%+ female",
"Occupations that are 45-55% female",
"Occupations that are 75%+ male"),
occupation = fct_reorder(.f = occupation, .x = total_earnings))
#| eval: true
#| echo: true
#| out-width: "100%"
# dumbbell plot ----
ggplot(subset_jobs) +
geom_point(aes(x = total_earnings_male, y = occupation), color = "plum", size = 2.5)
#| eval: true
#| echo: true
#| out-width: "100%"
# dumbbell plot ----
ggplot(subset_jobs) +
geom_point(aes(x = total_earnings_male, y = occupation), color = "plum", size = 2.5) +
geom_point(aes(x = total_earnings_female, y = occupation), color = "purple", size = 2.5)
#| eval: true
#| echo: true
#| out-width: "100%"
# dumbbell plot ----
ggplot(subset_jobs) +
geom_point(aes(x = total_earnings_male, y = occupation), color = "plum", size = 2.5) +
geom_point(aes(x = total_earnings_female, y = occupation), color = "purple", size = 2.5) +
geom_linerange(aes(y = occupation, xmin = total_earnings_female, xmax = total_earnings_male))
#| eval: true
#| echo: true
#| out-width: "100%"
# dumbbell plot ----
ggplot(subset_jobs) +
geom_linerange(aes(y = occupation, xmin = total_earnings_female, xmax = total_earnings_male)) +
geom_point(aes(x = total_earnings_male, y = occupation), color = "plum", size = 2.5) +
geom_point(aes(x = total_earnings_female, y = occupation), color = "purple", size = 2.5)
#| eval: true
#| echo: true
#| out-width: "100%"
# dumbbell plot ----
ggplot(subset_jobs) +
geom_linerange(aes(y = occupation, xmin = total_earnings_female, xmax = total_earnings_male)) +
geom_point(aes(x = total_earnings_male, y = occupation), color = "plum", size = 2.5) +
geom_point(aes(x = total_earnings_female, y = occupation), color = "purple", size = 2.5) +
facet_wrap(~group_label)
#| eval: true
#| echo: true
#| out-width: "100%"
# dumbbell plot ----
ggplot(subset_jobs) +
geom_linerange(aes(y = occupation, xmin = total_earnings_female, xmax = total_earnings_male)) +
geom_point(aes(x = total_earnings_male, y = occupation), color = "plum", size = 2.5) +
geom_point(aes(x = total_earnings_female, y = occupation), color = "purple", size = 2.5) +
facet_wrap(~group_label, nrow = 3, scales = "free_y")
#| eval: true
#| echo: true
#| out-width: "100%"
# dumbbell plot ----
ggplot(subset_jobs) +
geom_linerange(aes(y = occupation, xmin = total_earnings_female, xmax = total_earnings_male)) +
geom_point(aes(x = total_earnings_male, y = occupation), color = "plum", size = 2.5) +
geom_point(aes(x = total_earnings_female, y = occupation), color = "purple", size = 2.5) +
facet_wrap(~group_label, nrow = 3, scales = "free_y") +
scale_x_continuous(labels = label_dollar(scale = 0.001, suffix = "k"))
#| eval: true
#| echo: true
#| out-width: "100%"
# dumbbell plot ----
ggplot(subset_jobs) +
geom_linerange(aes(y = occupation, xmin = total_earnings_female, xmax = total_earnings_male)) +
geom_point(aes(x = total_earnings_male, y = occupation), color = "plum", size = 2.5) +
geom_point(aes(x = total_earnings_female, y = occupation), color = "purple", size = 2.5) +
facet_wrap(~group_label, nrow = 3, scales = "free_y") +
scale_x_continuous(labels = label_dollar(scale = 0.001, suffix = "k"),
breaks = c(25000, 50000, 75000, 100000))
#| eval: true
#| echo: true
#| out-width: "100%"
# dumbbell plot ----
ggplot(subset_jobs) +
geom_linerange(aes(y = occupation, xmin = total_earnings_female, xmax = total_earnings_male)) +
geom_point(aes(x = total_earnings_male, y = occupation), color = "plum", size = 2.5) +
geom_point(aes(x = total_earnings_female, y = occupation), color = "purple", size = 2.5) +
facet_wrap(~group_label, nrow = 3, scales = "free_y") +
scale_x_continuous(labels = label_currency(scale = 0.001, suffix = "k"),
breaks = c(25000, 50000, 75000, 100000))
#..........................load packages.........................
library(metajam)
library(tidyverse)
library(ggExtra)
library(ggdensity)
#...................download data from DataOne...................
# you only need to do this once (then I recommend commenting it out)!
download_d1_data("https://cn.dataone.org/cn/v2/resolve/https%3A%2F%2Fpasta.lternet.edu%2Fpackage%2Fdata%2Feml%2Fknb-lter-hbr%2F208%2F11%2F3b3cf7ea447cb875d7c7d68ebdfd24c7",
path = here::here("week4"))
#..........................load packages.........................
library(metajam)
library(tidyverse)
library(ggExtra)
library(ggdensity)
# DataOne not working - read in data from foler
stream_chem_data <- read_csv(here::here("week4","data", "HubbardBrook_weekly_stream_chemistry.csv"))
#| eval: true
#| echo: true
#| warning: false
# basic scatter plot ----
stream_chem_data |>
filter(waterYr == 2021) |>
ggplot(aes(x = DOC, y = pH)) +
geom_point(alpha - 0.5)
#| eval: true
#| echo: true
#| warning: false
# basic scatter plot ----
stream_chem_data |>
filter(waterYr == 2021) |>
ggplot(aes(x = DOC, y = pH)) +
geom_point(alpha = 0.5)
#| eval: true
#| echo: true
#| warning: false
# basic scatter plot ----
p1 <- stream_chem_data |>
filter(waterYr == 2021) |>
ggplot(aes(x = DOC, y = pH)) +
geom_point(alpha = 0.5)
#| eval: true
#| echo: true
#| warning: false
# scatter + rug plot ----
p1 +
geom_rug()
#| eval: true
#| echo: true
#| warning: false
# add marginal plots with {ggExtra}; also try "density", "boxplot" ----
ggMarginal(p1, type = "histogram")
#| eval: true
#| echo: true
#| warning: false
# add marginal plots with {ggExtra}; also try "density", "boxplot" ----
ggMarginal(p1, type = "density")
#| eval: true
#| echo: true
#| warning: false
# scatter plot with points colored by site ----
p2 <- stream_chem_data |>
filter(waterYr == 2021) |>
ggplot(aes(x = DOC, y = pH)) +
geom_point(alpha = 0.5) +
theme(legend.position = "bottom")
p2
#| eval: true
#| echo: true
#| warning: false
# scatter plot with points colored by site ----
p2 <- stream_chem_data |>
filter(waterYr == 2021) |>
ggplot(aes(x = DOC, y = pH, color = site)) +
geom_point(alpha = 0.5) +
theme(legend.position = "bottom")
p2
# add marginal density plot ----
ggMarginal(p2, type = "density", groupFill = TRUE)
# add marginal density plot ----
ggMarginal(p2, type = "density", groupFill = TRUE, groupColour = TRUE)
#| eval: true
#| echo: true
# add a smoothed line ----
stream_chem_data |>
filter(waterYr %in% c(2011:2021)) |>
filter(site == "W5")
#| eval: true
#| echo: true
# add a smoothed line ----
stream_chem_data |>
filter(waterYr %in% c(2011:2021)) |>
filter(site == "W5") |>
ggplot(aes(x = DOC, y = pH)) +
geom_point(alpha = 0.5) +
geom_smooth()
#| eval: true
#| echo: true
# add a smoothed line ----
stream_chem_data |>
filter(waterYr %in% c(2011:2021)) |>
filter(site == "W5") |>
ggplot(aes(x = DOC, y = pH)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm")
#| eval: true
#| echo: true
# add a smoothed line ----
stream_chem_data |>
filter(waterYr %in% c(2011:2021)) |>
filter(site == "W5") |>
ggplot(aes(x = DOC, y = pH)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE)
#| eval: true
#| echo: true
# add a smoothed line ----
stream_chem_data |>
filter(waterYr %in% c(2011:2021)) |>
filter(site == "W5") |>
ggplot(aes(x = DOC, y = pH)) +
geom_point(alpha = 0.5) +
geom_smooth(
)
#| eval: true
#| echo: true
# add a trend line ----
stream_chem_data |>
filter(waterYr %in% c(2011:2021)) |>
filter(site == "W5") |>
ggplot(aes(x = DOC, y = pH)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE)
#| eval: true
#| echo: true
#| warning: false
# bubble chart ----
stream_chem_data |>
filter(waterYr == 2021) |>
ggplot(aes(x = DOC, y = pH, size = AL_ICP, color = "site")) +
geom_point(alpha = 0.5) +
labs(x = "DOC (mg/L)", size = "Al (mg/L)", color = "Site")
#| eval: true
#| echo: true
#| warning: false
# bubble chart ----
stream_chem_data |>
filter(waterYr == 2021) |>
ggplot(aes(x = DOC, y = pH, size = AL_ICP, color = "site")) +
geom_point(alpha = 0.5) +
#labs(x = "DOC (mg/L)", size = "Al (mg/L)", color = "Site")
```
#| eval: true
#| echo: true
#| warning: false
# bubble chart ----
stream_chem_data |>
filter(waterYr == 2021) |>
ggplot(aes(x = DOC, y = pH, size = AL_ICP, color = site)) +
geom_point(alpha = 0.5) +
#labs(x = "DOC (mg/L)", size = "Al (mg/L)", color = "Site")
```
#| eval: true
#| echo: true
#| warning: false
# bubble chart ----
stream_chem_data |>
filter(waterYr == 2021) |>
ggplot(aes(x = DOC, y = pH, size = AL_ICP, color = site)) +
geom_point(alpha = 0.5)
View(stream_chem_data)
#| eval: true
#| echo: true
#| warning: false
# bubble chart ----
stream_chem_data |>
filter(waterYr == 2021) |>
ggplot(aes(x = DOC, y = pH, size = AI_ICP, color = site)) +
geom_point(alpha = 0.5)
#| eval: true
#| echo: true
#| warning: false
# bubble chart ----
stream_chem_data |>
filter(waterYr == 2021) |>
ggplot(aes(x = DOC, y = pH, size = Al_ICP, color = site)) +
geom_point(alpha = 0.5)
#| eval: true
#| echo: true
#| warning: false
# bubble chart ----
stream_chem_data |>
filter(waterYr == 2021) |>
ggplot(aes(x = DOC, y = pH, size = Al_ICP, color = site)) +
geom_point(alpha = 0.5) +
scale_size(range = c(1,10)) +
labs(x = "DOC (mg/L)", size = "Al (mg/L)", color = "Site")
#| eval: true
#| echo: true
#| warning: false
# bubble chart ----
stream_chem_data |>
filter(waterYr == 2021) |>
ggplot(aes(x = DOC, y = pH, color = site)) +
geom_point(alpha = 0.5) +
scale_size(range = c(1,10)) +
labs(x = "DOC (mg/L)", size = "Al (mg/L)", color = "Site")
#| eval: true
#| echo: true
#| warning: false
# scale size by area ----
stream_chem_data |>
filter(waterYr == 2021) |>
ggplot(aes(x = DOC, y = pH, color = site, size = Al_ICP)) +
geom_point(alpha = 0.5) +
labs(x = "DOC (mg/L)", size = "Al (mg/L)", color = "Site")
#| eval: true
#| echo: true
#| warning: false
# scale size by area ----
stream_chem_data |>
filter(waterYr == 2021) |>
ggplot(aes(x = DOC, y = pH, color = site, size = Al_ICP)) +
geom_point(alpha = 0.5) +
scale_size(range = c(1,10)) +
labs(x = "DOC (mg/L)", size = "Al (mg/L)", color = "Site")
#| eval: true
#| echo: true
#| warning: false
# don't scale size by radius ----
stream_chem_data |>
filter(waterYr == 2021) |>
ggplot(aes(x = DOC, y = pH, color = site, size = Al_ICP)) +
geom_point(alpha = 0.5) +
scale_radius(range = c(1, 10)) +
labs(x = "DOC (mg/L)", size = "Al (mg/L)", color = "Site")
#| eval: true
#| echo: true
#| warning: false
stream_chem_data |>
filter(waterYr == 2021) |>
ggplot(aes(x = DOC, y = pH, color = Al_ICP)) +
geom_point(alpha = 0.5, size = 2) +
scale_color_viridis_c() +
labs(x = "DOC (mg/L)")
#| eval: true
#| echo: true
#| warning: false
#| layout-ncol: 2
# effect of DOC on pH ----
stream_chem_data |>
filter(waterYr == 2021) |>
ggplot(aes(x = DOC, y = pH, color = site)) +
geom_point(alpha = 0.5)
# effect of DOC on Al_ICP ----
stream_chem_data |>
filter(waterYr == 2021) |>
ggplot(aes(x = Al_ICP, y = pH, color = site)) +
geom_point(alpha = 0.5)
#| eval: true
#| echo: false
#| warning: false
# wayyyy too many points ----
ggplot(stream_chem_data, aes(x = SO4, y = pH)) +
geom_point()
#| eval: true
#| echo: false
#| warning: false
# smaller + more transparent points ----
ggplot(stream_chem_data, aes(x = SO4, y = pH)) +
geom_point(alpha = 0.2)
#| eval: true
#| echo: false
#| warning: false
# smaller + more transparent points ----
ggplot(stream_chem_data, aes(x = SO4, y = pH)) +
geom_point(alpha = 0.2, size = 0.5)
#| eval: true
#| echo: false
#| warning: false
# smaller + more transparent points ----
ggplot(stream_chem_data, aes(x = SO4, y = pH)) +
geom_point(alpha = 0.2, size = 0.5) +
geom_rug()
#| eval: true
#| echo: false
#| warning: false
# smaller + more transparent points ----
ggplot(stream_chem_data, aes(x = SO4, y = pH, color = site)) +
geom_point(alpha = 0.2, size = 0.5) +
geom_rug()
#| eval: true
#| echo: false
#| warning: false
# heatmap of 2d bin counts ----
ggplot(stream_chem_data, aes(x = SO4, y = pH)) +
geom_bin2d() +
scale_fill_viridis_c()
#| eval: true
#| echo: false
#| warning: false
# heatmap of 2d bin counts ----
ggplot(stream_chem_data, aes(x = SO4, y = pH)) +
geom_hex() +
scale_fill_viridis_c()
#| eval: true
#| echo: false
#| warning: false
# heatmap of 2d bin counts ----
ggplot(stream_chem_data, aes(x = SO4, y = pH)) +
geom_hex() +
scale_fill_viridis_c() +
guides(fill = guide_colorbar(title = "Count",
barwidth = 1,
barwidth = 15))
#| eval: true
#| echo: false
#| warning: false
# heatmap of 2d bin counts ----
ggplot(stream_chem_data, aes(x = SO4, y = pH)) +
geom_hex() +
scale_fill_viridis_c() +
guides(fill = guide_colorbar(title = "Count",
barwidth = 1,
barheight = 15))
#| eval: true
#| echo: false
#| warning: false
# contour plot ----
ggplot(stream_chem_data, aes(x = SO4, y = pH)) +
geom_density2d_filled()
#| eval: true
#| echo: false
#| warning: false
#  ----
ggplot(stream_chem_data, aes(x = SO4, y = pH)) +
geom_hdr()
